/*********************************************************
 * scadalib_accumulator.h
 * contents: Iaccumulator interface
 * date: 2009-09-23 code generated by scadalib_gen(hongkeqin@xjgc.com)
 *********************************************************/

#ifndef SCADALIB_accumulator_H_
#define SCADALIB_accumulator_H_

#include "../icsunknown.h"
#include "./scadalib_typedef.h"
#include "./irecordset.h"


//forward declarations
class Imeasclass;
class Imeasunit;
class Ianalog;
class Icsfcommsrc;
class Imeastype;
class Itimertype;
class Iequipment;

class Iaccumulator : public IRecordSet
{
public:
	//associations
	virtual Imeasclass* Relevantmeasclass() = 0;

	virtual Imeasunit* Relevantmeasunit() = 0;

	virtual Ianalog* Relevantanalog() = 0;

	virtual Icsfcommsrc* Relevantcommsrc() = 0;

	virtual Imeastype* Relevantmeastype() = 0;

	virtual Itimertype* Relevantsavetimer() = 0;

	virtual Iequipment* Relevantequip() = 0;

	//
	virtual int Getid() = 0;

	virtual void Setid(int id) = 0;

	virtual int Getequipid() = 0;

	virtual void Setequipid(int equipid) = 0;

	virtual int Getsavetimerid() = 0;

	virtual void Setsavetimerid(int savetimerid) = 0;

	virtual int Getmeastypeid() = 0;

	virtual void Setmeastypeid(int meastypeid) = 0;

	virtual int Getmeasunitid() = 0;

	virtual void Setmeasunitid(int measunitid) = 0;

	virtual string_type Getcode() = 0;

	virtual void Setcode(const char* code) = 0;

	virtual string_type Getname() = 0;

	virtual void Setname(const char* name) = 0;

	virtual string_type Getdescription() = 0;

	virtual void Setdescription(const char* description) = 0;

	virtual string_type Getpathname() = 0;

	virtual void Setpathname(const char* pathname) = 0;

	virtual int Getsignaltype() = 0;

	virtual void Setsignaltype(int signaltype) = 0;

	virtual double Getscalefactor() = 0;

	virtual void Setscalefactor(double scalefactor) = 0;

	virtual double Getoffset() = 0;

	virtual void Setoffset(double offset) = 0;

	virtual int Getinterval() = 0;

	virtual void Setinterval(int interval) = 0;

	virtual int Getintervalcyc() = 0;

	virtual void Setintervalcyc(int intervalcyc) = 0;

	virtual int Getcommsrcid() = 0;

	virtual void Setcommsrcid(int commsrcid) = 0;

	virtual int Getcommpointid() = 0;

	virtual void Setcommpointid(int commpointid) = 0;

	virtual int Getisperiodstatic() = 0;

	virtual void Setisperiodstatic(int isperiodstatic) = 0;

	virtual double Getuppervalue() = 0;

	virtual void Setuppervalue(double uppervalue) = 0;

	virtual double Getmaxval() = 0;

	virtual void Setmaxval(double maxval) = 0;

	virtual double Getminval() = 0;

	virtual void Setminval(double minval) = 0;

	virtual int Getanalogid() = 0;

	virtual void Setanalogid(int analogid) = 0;

	virtual dt_type Getcurdatatime() = 0;

	virtual void Setcurdatatime(dt_type curdatatime) = 0;

	virtual double Getcurvalue() = 0;

	virtual void Setcurvalue(double curvalue) = 0;

	virtual int Getquality() = 0;

	virtual void Setquality(int quality) = 0;

	virtual double Getincrementvalue() = 0;

	virtual void Setincrementvalue(double incrementvalue) = 0;

	virtual int Getorigin() = 0;

	virtual void Setorigin(int origin) = 0;

	virtual double Getrelativepower() = 0;

	virtual void Setrelativepower(double relativepower) = 0;

	virtual double Getamountvalue() = 0;

	virtual void Setamountvalue(double amountvalue) = 0;

	virtual int Getdeleteflag() = 0;

	virtual void Setdeleteflag(int deleteflag) = 0;

	virtual string_type Getfamily() = 0;

	virtual void Setfamily(const char* family) = 0;

	virtual int Getlockflag() = 0;

	virtual void Setlockflag(int lockflag) = 0;

	virtual int Getstationid() = 0;

	virtual void Setstationid(int stationid) = 0;

	virtual int Getbayid() = 0;

	virtual void Setbayid(int bayid) = 0;

	virtual int Getsaveflag() = 0;

	virtual void Setsaveflag(int saveflag) = 0;

	virtual int Getmeasclassid() = 0;

	virtual void Setmeasclassid(int measclassid) = 0;

	virtual int Getdatatransflag() = 0;

	virtual void Setdatatransflag(int datatransflag) = 0;


};

#endif